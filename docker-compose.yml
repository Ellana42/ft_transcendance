version: "3.7"

services:
    nginx:
        container_name: nginx
        image:          nginx:latest
        env_file:       .env
        networks:
            - ft_transcendance
        ports:
            - "443:443"
        restart:        on-failure
        volumes:
            - frontend_data:/var/www/html/
            - backend_data:/var/www/html/
        depends_on:
            - frontend
    frontend:
        container_name: frontend
        build:          requirements/frontend
        image:          frontend:ft_transcendance
        env_file:       .env
        networks:
            - ft_transcendance
        restart:        on-failure
        ports:
            - "3000:3000"
        volumes:
            - frontend_data:/var/www/html/
        depends_on:
            - backend
    backend:
        container_name: backend
        build:          requirements/backend/
        image:          backend:ft_transcendance
        env_file:       .env
        networks:
            - ft_transcendance
        restart:        on-failure
        volumes:
            - backend_data:/var/www/html/
        depends_on:
            - postgresql
    postgresql:
        container_name: postgresql
        image:          postgres:latest
        env_file:       .env
        networks:
            - ft_transcendance
        restart:        on-failure
        volumes:
            - postgresql-data:/var/lib/mysql/

networks:
    ft_transcendance:
        name:   ft_transcendance
        driver: bridge

volumes:
  postgresql-data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: ${DATA_PATH}/postgresql-data
  frontend_data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: ${DATA_PATH}/frontend_data
  backend_data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: ${DATA_PATH}/backend_data
